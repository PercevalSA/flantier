[project]
name = "flantier"
description = "Flantier der Geschenk Manager"
version = "0.23.0"
authors = [{ name = "Perceval Arenou", email = "perceval.arenou@gmail.com" }]
readme = "README.md"
requires-python = ">=3.7"

dependencies = [
    "python-telegram-bot==v13.15",
    "google-api-python-client==2.65.0",
]

[project.urls]
"Homepage" = "https://github.com/PercevalSA/flantier"

[project.optional-dependencies]
dev = ["black", "isort", "pylint", "ruff"]
# test = [""]

# The following would provide a command line executable called `sample`
# which executes the function `main` from this package when invoked.
[project.scripts] # Optional
flantier = "flantier:main"

# This is configuration specific to the `setuptools` build backend.
# If you are using a different build backend, you will need to change this.
[tool.setuptools]
package-data = { "flantier" = ["*.sample"] }

[build-system]
# These are the assumed default build requirements from pip:
# https://pip.pypa.io/en/stable/reference/pip/#pep-517-and-518-support
requires = ["setuptools>=43.0.0", "wheel"]
build-backend = "setuptools.build_meta"

#build-backend = "flit_core.buildapi"
#requires = ["flit_core >=3.2,<4"]

[tool.ruff]
select = ["E", "F", "W", "Q", "I"]
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
line-length = 90

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310']
# this experimental, you need spaces in strings for the split to work
preview = true

[tool.isort]
# make it compatible with black
profile = "black"

ignore_missing_imports = true
# Subset of "--strict" mode.
check_untyped_defs = true
disallow_incomplete_defs = true
strict_concatenate = true
strict_equality = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = false

[tool.pylint.'MESSAGES CONTROL']
max-line-length = 90
disable = """
    import-error,
    not-callable
"""
