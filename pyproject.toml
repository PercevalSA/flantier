[project]
name = "flantier"
description = "Flantier der Geschenk Manager"
version = "0.24.0"
authors = [{ name = "Perceval Arenou", email = "perceval.arenou@gmail.com" }]
readme = "README.md"
requires-python = ">=3.9"

dependencies = [
    "bs4",                                 # for audio downloader
    "google-api-python-client == 2.154.0", # for wishlist
    "python-telegram-bot ==v21.8",
    "toml",                                # for config file
    "tqdm",                                # for audio downloader
]

[project.urls]
"Homepage" = "https://github.com/PercevalSA/flantier"

[project.optional-dependencies]
# dev = [""]
test = ["black", "isort", "mypy", "pylint", "ruff"]

# The following would provide a command line executable called `sample`
# which executes the function `main` from this package when invoked.
[project.scripts] # Optional
flantier = "flantier.bot:main"

[build-system]
# https://pip.pypa.io/en/stable/reference/pip/#pep-517-and-518-support
build-backend = "flit_core.buildapi"
requires = ["flit_core >=3.2,<4"]

# This is configuration specific to the `setuptools` build backend.
# If you are using a different build backend, you will need to change this.
[tool.setuptools]
package-data = { "flantier" = ["*.toml"] }

[tool.ruff]
select = ["E", "F", "W", "Q", "I"]
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
line-length = 90

[tool.black]
line-length = 90
target-version = ['py37', 'py38', 'py39', 'py310']
# this experimental, you need spaces in strings for the split to work
preview = true

[tool.isort]
# make it compatible with black
profile = "black"

[tool.pylint.'MESSAGES CONTROL']
max-line-length = 90
disable = """
    fixme,
    import-error,
    undefined-variable
"""

[tool.mypy]
ignore_missing_imports = true
# Subset of "--strict" mode.
check_untyped_defs = true
disallow_incomplete_defs = true
extra_checks = true
strict_equality = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = false
